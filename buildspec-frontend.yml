version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 381492221394.dkr.ecr.ap-south-1.amazonaws.com
      - echo Installing dependencies...
      - cd new-app/ft
      - npm install
      - echo Running SonarQube analysis...
      - |
        sonar-scanner \
          -Dsonar.projectKey=hobby-app-frontend \
          -Dsonar.sources=src \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
          -Dsonar.exclusions=node_modules/**,build/**,coverage/**,public/**,*.log
      - echo SonarQube analysis completed
  build:
    commands:
      - echo Build started on `date`
      - echo Building React application...
      - npm run build
      - echo Building the Docker image...
      - REPOSITORY_URI=381492221394.dkr.ecr.ap-south-1.amazonaws.com/hobby-app-frontend
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - echo "[{\"name\":\"hobby-app-frontend\",\"imageUri\":\"$REPOSITORY_URI:$IMAGE_TAG\"}]" > imagedefinitions.json
      - echo $REPOSITORY_URI:$IMAGE_TAG > frontend-image-uri.txt

artifacts:
  files:
    - imagedefinitions.json
    - frontend-image-uri.txt
    - frontend-deployment.yaml
    - frontend-service.yaml
  base-directory: '.' 