version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo Installing kubectl...
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - kubectl version --client
  pre_build:
    commands:
      - echo Configuring kubectl for EKS cluster...
      - echo "Debugging: AWS caller identity"
      - aws sts get-caller-identity
      - echo "Debugging: List EKS clusters"
      - aws eks list-clusters --region ap-south-1
      - echo "Debugging: Describe cluster"
      - aws eks describe-cluster --region ap-south-1 --name app-cluster-new
      - echo "Attempting to update kubeconfig..."
      - aws eks update-kubeconfig --region ap-south-1 --name app-cluster-new
      - kubectl config current-context
      - echo Reading image URIs from build artifacts...
      - |
        if [ -f backend-image-uri.txt ]; then
          BACKEND_IMAGE_URI=$(cat backend-image-uri.txt)
          echo "Backend Image URI: $BACKEND_IMAGE_URI"
        fi
      - |
        if [ -f frontend-image-uri.txt ]; then
          FRONTEND_IMAGE_URI=$(cat frontend-image-uri.txt)
          echo "Frontend Image URI: $FRONTEND_IMAGE_URI"
        fi
  build:
    commands:
      - echo Deployment started on `date`
      - echo Updating Kubernetes deployment files with new image URIs...
      - |
        if [ ! -z "$BACKEND_IMAGE_URI" ]; then
          sed -i "s|image:.*backend.*|image: $BACKEND_IMAGE_URI|g" backend-deployment.yaml
          echo "Updated backend deployment with image: $BACKEND_IMAGE_URI"
        fi
      - |
        if [ ! -z "$FRONTEND_IMAGE_URI" ]; then
          sed -i "s|image:.*frontend.*|image: $FRONTEND_IMAGE_URI|g" frontend-deployment.yaml
          echo "Updated frontend deployment with image: $FRONTEND_IMAGE_URI"
        fi
      - echo Applying Kubernetes configurations...
      - kubectl apply -f db-secret.yaml
      - kubectl apply -f backend-deployment.yaml
      - kubectl apply -f backend-service.yaml
      - kubectl apply -f frontend-deployment.yaml
      - kubectl apply -f frontend-service.yaml
      - echo Waiting for deployments to complete...
      - kubectl rollout status deployment/backend --timeout=300s
      - kubectl rollout status deployment/frontend --timeout=300s
  post_build:
    commands:
      - echo Deployment completed on `date`
      - echo Verifying deployment status...
      - kubectl get pods -l app=backend
      - kubectl get pods -l app=frontend
      - kubectl get services
      - echo Getting application URLs...
      - kubectl get service frontend-service
      - echo Testing backend health...
      - kubectl get endpoints backend-service
      - echo Deployment verification completed

artifacts:
  files:
    - '**/*'
  base-directory: '.' 