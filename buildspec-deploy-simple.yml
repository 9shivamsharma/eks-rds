version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9

  pre_build:
    commands:
      - echo "🔧 Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - kubectl version --client

      - echo "🔐 Authenticating with EKS..."
      - aws eks update-kubeconfig --region us-east-1 --name eks-cluster-new

      - echo "📦 Copying image URIs from input artifacts..."
      - cp FrontendBuildOutput/frontend-image-uri.txt .
      - cp BackendBuildOutput/backend-image-uri.txt .

      - cp FrontendBuildOutput/frontend-deployment.yaml .
      - cp FrontendBuildOutput/frontend-service.yaml .
      - cp BackendBuildOutput/backend-deployment.yaml .
      - cp BackendBuildOutput/backend-service.yaml .

      - echo "📥 Reading image URIs..."
      - FRONTEND_IMAGE=$(cat frontend-image-uri.txt)
      - BACKEND_IMAGE=$(cat backend-image-uri.txt)
      - echo "✅ Frontend Image: $FRONTEND_IMAGE"
      - echo "✅ Backend Image: $BACKEND_IMAGE"

  build:
    commands:
      - echo "✏️ Updating deployment manifests..."
      - sed -i "s|image: .*frontend:.*|image: $FRONTEND_IMAGE|g" frontend-deployment.yaml
      - sed -i "s|image: .*backend:.*|image: $BACKEND_IMAGE|g" backend-deployment.yaml

      - echo "🚀 Applying frontend resources..."
      - kubectl apply -f frontend-deployment.yaml
      - kubectl apply -f frontend-service.yaml

      - echo "🚀 Applying backend resources..."
      - kubectl apply -f backend-deployment.yaml
      - kubectl apply -f backend-service.yaml

      - echo "⏳ Waiting for rollouts..."
      - kubectl rollout status deployment/frontend --timeout=180s
      - kubectl rollout status deployment/backend --timeout=180s

  post_build:
    commands:
      - echo "✅ Deployment finished at $(date)"
      - kubectl get pods -o wide
      - kubectl get svc
