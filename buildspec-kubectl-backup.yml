version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing Terraform..."
      - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
      - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      - apt-get update && apt-get install -y terraform
      - terraform --version
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - kubectl version --client

  pre_build:
    commands:
      - echo "=== EKS Authentication Setup ==="
      - echo "AWS Identity:"
      - aws sts get-caller-identity
      - echo "EKS Clusters:"
      - aws eks list-clusters --region us-east-1
      - echo "Updating kubeconfig..."
      - aws eks update-kubeconfig --region us-east-1 --name eks-cluster-new
      - echo "Testing cluster access..."
      - kubectl cluster-info || echo "Cluster info failed, but continuing..."
      - echo "=== Image Configuration ==="
      - |
        export FRONTEND_IMAGE="605134461257.dkr.ecr.us-east-1.amazonaws.com/frontend:latest"
        export BACKEND_IMAGE="605134461257.dkr.ecr.us-east-1.amazonaws.com/backend:latest"
        echo "Frontend: $FRONTEND_IMAGE"
        echo "Backend: $BACKEND_IMAGE"

  build:
    commands:
      - echo "=== Starting Terraform Deployment ==="
      - echo "Deployment started at $(date)"
      - echo "Initializing Terraform..."
      - terraform init
      - echo "Planning Terraform deployment..."
      - terraform plan -var="frontend_image=$FRONTEND_IMAGE" -var="backend_image=$BACKEND_IMAGE" -out=tfplan
      - echo "Applying Terraform deployment..."
      - terraform apply -auto-approve tfplan
      - echo "Waiting for deployments to be ready..."
      - kubectl rollout status deployment/frontend -n default --timeout=300s || echo "Frontend rollout failed"
      - kubectl rollout status deployment/backend -n default --timeout=300s || echo "Backend rollout failed"

  post_build:
    commands:
      - echo "=== Deployment Summary ==="
      - echo "Deployment completed at $(date)"
      - echo "Terraform state:"
      - terraform show
      - echo "Deployments:"
      - kubectl get deployments -n default || echo "Cannot get deployments"
      - echo "Pods:"
      - kubectl get pods -n default || echo "Cannot get pods"
      - echo "Services:"
      - kubectl get services -n default || echo "Cannot get services"

artifacts:
  files:
    - '**/*'
  base-directory: '.' 